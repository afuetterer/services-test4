name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  # TODO
  group: ci-${{ github.head_ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: 1
  FORCE_COLOR: 1 # colored output by pytest etc.
  CLICOLOR_FORCE: 1 # colored output by ruff

# Failed to save: reserveCache failed: connect ECONNREFUSED 54.185.253.63:443
# Failed to restore: getCacheEntry failed: connect ECONNREFUSED 54.185.253.63:443

permissions:
  contents: read

jobs:
  tests:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-22.04
    # timeout-minutes: 5
    strategy:
      matrix:
        python-version: ["3.8", "3.11", "3.12-dev"]

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
        with:
          disable-sudo: true
          # disable-telemetry: true
          egress-policy: audit
          # egress-policy: block
          # # TODO: find all needed endpoints
          # allowed-endpoints: >

          #   api.github.com:443
          #   files.pythonhosted.org:443
          #   github.com:443
          #   objects.githubusercontent.com:443
          #   pypi.org:443
          #   registry.npmjs.org:443
          #

      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1 # v4.7.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Ensure latest pip
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install hatch
        run: pip install --upgrade hatch

      - name: Set up pre-commit cache
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ matrix.python-version }}-${{ hashFiles('.pre-commit-config.yaml') }}
        if: matrix.python-version == '3.11'

      - name: Run linters
        run: hatch run lint:all
        timeout-minutes: 5
        if: matrix.python-version == '3.11'

      - name: Run tests
        run: hatch run cov

      # - name: Upload coverage data
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: coverage-data
      #     path: .coverage.*
      #     if-no-files-found: ignore

    # job: combine coverage
    # add coverage report

  # credit:
  # https://hynek.me/articles/python-github-actions/
  # https://github.com/hynek/structlog/blob/main/.github/workflows/ci.yml (MIT License)
  # install-dev:
  #   name: Verify dev env
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest, macos-latest]

  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.11"
  #         cache: pip

  #     - run: python -Im pip install -e .[dev]
  #     - run: python -Ic 'import services_test4; print(services_test4.__version__)'

  # credit:
  # https://github.com/hynek/structlog/blob/main/.github/workflows/ci.yml (MIT License)
  required-checks-pass:
    if: always()
    needs:
      - tests
      # - install-dev
    runs-on: ubuntu-latest

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
        with:
          disable-sudo: true
          egress-policy: audit
          # allowed-endpoints: >

      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
